import fs from 'fs';

import { oneLine } from 'common-tags';
import config from 'config';

// This is a webpack plugin to expose the data generated by SriPlugin.
// See webpack.prod.config.babel.js
export default class SriDataPlugin {
  constructor({ saveAs, _config = config } = {}) {
    this.config = _config;

    if (!saveAs) {
      throw new Error('The saveAs parameter cannot be empty');
    }
    this.saveAs = saveAs;
  }

  apply(compiler) {
    const loadableStatsFilename = this.config.get('loadableStatsFilename');

    compiler.hooks.done.tap('SriDataPlugin', (stats) => {
      const sriStats = {};
      const { assets } = stats.toJson();

      try {
        assets.forEach((asset) => {
          const { name } = asset;

          // The `loadable-stats.json` is created by the `LoadablePlugin`
          // (webpack). No need to create SRI for it, it is only used by the
          // server.
          if (name !== loadableStatsFilename && !asset.integrity) {
            throw new Error(
              oneLine`The integrity property is falsey for asset ${name}; Is
                  the webpack-subresource-integrity plugin installed and
                  enabled?`,
            );
          }
          sriStats[name] = asset.integrity;
        });

        fs.writeFileSync(this.saveAs, JSON.stringify(sriStats));
      } catch (error) {
        stats.compilation.errors.push(error);
      }
    });
  }
}
